
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <title>Reporte de pagos</title>

    <!-- pivottable.js requires jQuery -->
    <script type="text/javascript" src="http://code.jquery.com/jquery-2.1.3.min.js"></script>

    <!-- jQuery UI sortable plugin for drag and drop - required only for pivotUI  -->
    <script src="~/Scripts/pivot-table/jquery-ui-1.9.2.custom.min.js"></script>
    <!-- OPTIONAL: support touch events (pivot table usage from mobile and tablet devices) -->
    <script src="~/Scripts/pivot-table/jquery.ui.touch-punch.min.js"></script>


    <!-- PivotTable.js plugin with renderers -->
    <script src="~/Scripts/pivot-table/pivottable/pivot.min.js"></script>

    <!-- note: renderers are OPTIONAL (useful are: google charts, c3 charts) -->
    <script src="~/Scripts/pivot-table/pivottable/export_renderers.min.js"></script>

    <!-- NReco extensions -->
    <script src="~/Scripts/pivot-table/pivottable/nrecopivottableext.js"></script>

    <!-- basic pivottable css -->
    <link href="~/Scripts/pivot-table/pivottable/pivot.css" rel="stylesheet" />
    <!-- NReco extensions css -->
    <link href="~/Scripts/pivot-table/pivottable/nrecopivottableext.css" rel="stylesheet" />

    <!-- bootstrap -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.6/js/bootstrap.min.js"></script>

    <!-- some styles for this example -->
    <style>
        /* styles for responsive pivot UI + bootstrap-like styles */

        .pvtVals {
            width: 150px;
        }

        .pvtAxisContainer {
            width: 1000px;
        }

        /*.pvtFixedHeader {
            max-width: 150px;
        }*/

        .pivotHolder table.pvtUi {
            table-layout: fixed;
        }

            .pivotHolder select {
                visibility: hidden;
            }

                .pivotHolder select.form-control {
                    visibility: visible;
                }

        .pivotHolder > table.pvtUi, .pivotHolder table.pvtTable {
            width: 100%;
            margin-bottom: 0px;
        }

            .pivotHolder > table.pvtUi > tbody > tr > td, .pivotHolder > table.pvtUi > tbody > tr > th {
                border: 1px solid #ddd;
            }

            .pivotHolder .pvtAxisContainer li span.pvtAttr {
                height: auto;
                white-space: nowrap;
            }

            .pivotHolder .pvtAxisContainer.pvtUnused, .pivotHolder .pvtAxisContainer.pvtCols {
                vertical-align: middle;
            }

        .pivotHolder > table.pvtUi > tbody > tr:first-child > td:first-child {
            width: 250px;
        }

        .pivotHolder td.pvtRendererArea {
            padding-bottom: 0px;
            padding-right: 0px;
            border-bottom-width: 0px !important;
            border-right-width: 0px !important;
        }

        .pivotHolder td.pvtVals br {
            display: none;
        }

        .pvtRendererArea > div {
            overflow: auto;
        }

        .pvtTableRendererHolder {
            max-height: 600px; /* limit table height if needed */
        }
    </style>
</head>
<body>
    <div class="container">

        <nav class="navbar navbar-default" style="background: #367FA9">
            <div class="container-fluid">
                <div class="navbar-header">
                    <a class="navbar-brand" href="~/ContratosPagosJS/ContratosPagos">
                        <span style="color: #ffffff" class="glyphicon glyphicon-chevron-left"> Inicio</span>
                    </a>
                </div>
            </div>
        </nav>

        <h1>Reporte de pagos</h1>
        <div>
            <a class="btn btn-default btn-info" href="#" id="btnSave" onClick="fnExcelReport();"><span class="glyphicon glyphicon-th-list"></span>  Exportar a Excel</a> <a id="test" class="btn btn-default btn-warning" href=""><span class="glyphicon glyphicon-th"></span> Exportar a excel (sin formato)</a>
        </div>
        <div>
            
        </div>

        <div id="samplePivotTable" class="pivotHolder"></div>


        <script type="text/javascript">
            $(function () {
                var host = '200.6.245.76:8095';//document.location.host;

                var VistaPagosUri = 'http://'.concat(host, '/api/BackOffice/VistaPagos');

                var json = (function () {
                    var json = null;
                    $.ajax({
                        'async': false,
                        'global': false,
                        'url': VistaPagosUri,
                        'dataType': "json",
                        'success': function (data) {
                            json = data;
                        }
                    });
                    return json;
                })();

                //console.log(Object.keys(json[0]));

                var nrecoPivotExt = new NRecoPivotTableExtensions({
                    wrapWith: '<div id="tablaData" class="pvtTableRendererHolder"></div>',  // special div is needed by fixed headers when used with pivotUI
                    fixedHeaders: true
                });

                var stdRendererNames = ["Table", "Table Barchart", "Heatmap", "Row Heatmap", "Col Heatmap"];
                var wrappedRenderers = $.extend({}, $.pivotUtilities.renderers);
                $.each(stdRendererNames, function () {
                    var rName = this;
                    wrappedRenderers[rName] = nrecoPivotExt.wrapTableRenderer(wrappedRenderers[rName]);
                });

                $('#samplePivotTable').pivotUI(json, {
                    renderers: wrappedRenderers,
                    rendererOptions: { sort: { direction : "desc", column_key : [ 2014 ]} },
                    vals: ["Monto"],
                    rows: ["Contrato"],//Object.keys(json[0]),
                    cols: ["Pagado"],
                    aggregatorName : "Sum",
                    onRefresh: function (pivotUIOptions) {
                        // this is correct way to apply fixed headers with pivotUI
                        nrecoPivotExt.initFixedHeaders($('#samplePivotTable table.pvtTable'));

                        // apply boostrap styles to pvt UI controls
                        //$('#samplePivotTable select.pvtAttrDropdown:not(.form-control)').addClass('form-control input-sm');
                        //$('#samplePivotTable select.pvtAggregator:not(.form-control), #samplePivotTable select.pvtRenderer:not(.form-control)').addClass('form-control input-sm');
                        $('#samplePivotTable>table:not(.table)').addClass('table');
                    }
                });

            });
        </script>

        <script lang="js">

                        function fnExcelReport() {
                            var tab_text = '<html xmlns:x="urn:schemas-microsoft-com:office:excel">';
                            tab_text = tab_text + '<head><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet>';

                            tab_text = tab_text + '<x:Name>Pagos</x:Name>';

                            tab_text = tab_text + '<x:WorksheetOptions><x:Panes></x:Panes></x:WorksheetOptions></x:ExcelWorksheet>';
                            tab_text = tab_text + '</x:ExcelWorksheets></x:ExcelWorkbook></xml></head><body>';

                            tab_text = tab_text + "<table border='1px'>";
                            tab_text = tab_text + $('#tablaData').html();
                            tab_text = tab_text + '</table></body></html>';

                            var data_type = 'data:application/vnd.ms-excel';

                            var ua = window.navigator.userAgent;
                            var msie = ua.indexOf("MSIE");

                            if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) {
                                if (window.navigator.msSaveBlob) {
                                    var blob = new Blob([tab_text], {
                                        type: "application/csv;charset=utf-8;"
                                    });
                                    navigator.msSaveBlob(blob, 'ReportePagos.xls');
                                }
                            } else {
                                $('#btnSave').attr('href', data_type + ', ' + encodeURIComponent(tab_text));
                                $('#btnSave').attr('download', 'ReportePagos.xls');
                            }

                        }
        </script>

        <script type="text/javascript">

            var host = '200.6.245.76:8095';//document.location.host;

            var VistaPagosUri = 'http://'.concat(host, '/api/BackOffice/VistaPagos');

            var json = (function () {
                var json = null;
                $.ajax({
                    'async': false,
                    'global': false,
                    'url': VistaPagosUri,
                    'dataType': "json",
                    'success': function (data) {
                        json = data;
                    }
                });
                return json;
            })();

            testTypes = {
                "Proyecto": "String",
                "Proveedor": "String",
                "Contrato": "String",
                "Inicio_Contrato": "String",
                "Fin_del_Contrato": "String",
                "Estado_Contrato": "String",
                "Presupuesto_Contrato": "String",
                "Codigo_Publicidad": "Number",
                "Descripcion_de_Valla": "String",
                "Estado_Publicidad": "String",
                "Medias_Valla": "String",
                "Direccion_Valla": "String",
                "FechaCambioImagen": "String",
                "Demo": "String",
                "Zona_Geografica": "String",
                "CodigoBusqueda": "String",
                "Calendario_Periodo": "String",
                "Codigo_Pago": "Number",
                "Fecha": "String",
                "Monto": "String",
                "Pagado": "String",
                "Referencia_Pago": "String",
                "Estado_Pago": "String"
            };

            emitXmlHeader = function () {
                var headerRow = '<ss:Row>\n';
                for (var colName in testTypes) {
                    headerRow += '  <ss:Cell>\n';
                    headerRow += '    <ss:Data ss:Type="String">';
                    headerRow += colName + '</ss:Data>\n';
                    headerRow += '  </ss:Cell>\n';
                }
                headerRow += '</ss:Row>\n';
                return '<?xml version="1.0"?>\n' +
                       '<ss:Workbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">\n' +
                       '<ss:Worksheet ss:Name="Sheet1">\n' +
                       '<ss:Table>\n\n' + headerRow;
            };

            emitXmlFooter = function () {
                return '\n</ss:Table>\n' +
                       '</ss:Worksheet>\n' +
                       '</ss:Workbook>\n';
            };

            jsonToSsXml = function (jsonObject) {
                var row;
                var col;
                var xml;
                var data = typeof jsonObject != "object" ? JSON.parse(jsonObject) : jsonObject;

                xml = emitXmlHeader();

                for (row = 0; row < data.length; row++) {
                    xml += '<ss:Row>\n';

                    for (col in data[row]) {
                        xml += '  <ss:Cell>\n';
                        xml += '    <ss:Data ss:Type="' + testTypes[col] + '">';
                        xml += data[row][col] + '</ss:Data>\n';
                        xml += '  </ss:Cell>\n';
                    }

                    xml += '</ss:Row>\n';
                }

                xml += emitXmlFooter();
                return xml;
            };


            download = function (content, filename, contentType) {
                if (!contentType) contentType = 'application/octet-stream';
                var a = document.getElementById('test');
                var blob = new Blob([content], {
                    'type': contentType
                });
                a.href = window.URL.createObjectURL(blob);
                a.download = filename;
            };

            download(jsonToSsXml(json), 'ReportePagos.xls', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        </script>

    </div>
</body>
</html>
